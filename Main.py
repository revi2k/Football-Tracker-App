# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Main.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtWidgets import QMessageBox
from PyQt5.QtWidgets import QFileDialog, QDialog
import urllib.request as ul
from bs4 import BeautifulSoup as soup
import html2text

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1200, 800)
        
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(650, 10, 241, 51))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        font = QtGui.QFont()
        font.setFamily("Calibri Light")
        font.setPointSize(12)
        self.LeagueTable = QtWidgets.QTableWidget(self.widget)
        self.LeagueTable.setGeometry(QtCore.QRect(10, 80, 621, 671))
        self.LeagueTable.setObjectName("LeagueTable")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(10, 10, 131, 51))
        self.widget.setObjectName("widget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setFamily("Calibri Light")
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.ComboLeague = QtWidgets.QComboBox(self.widget)
        self.ComboLeague.setObjectName("ComboLeague")
        self.ComboLeague.addItems(["Select league","Premier League","Serie A","Bundesliga","Ligue 1","LaLiga"])
        self.verticalLayout.addWidget(self.ComboLeague)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1200, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        def create_table():
            for club in range(0,len(connection.row)-1):
                self.LeagueTable.setRowCount(len(connection.row)-1)
                self.LeagueTable.setItem(club, 0, QTableWidgetItem(str(connection.clubs[club])))
                self.LeagueTable.setItem(club, 1, QTableWidgetItem(str(connection.matches[club])))
                self.LeagueTable.setItem(club, 2, QTableWidgetItem(str(connection.wins[club])))
                self.LeagueTable.setItem(club, 3, QTableWidgetItem(str(connection.draws[club])))
                self.LeagueTable.setItem(club, 4, QTableWidgetItem(str(connection.loses[club])))
                self.LeagueTable.setItem(club, 5, QTableWidgetItem(str(connection.balance[club])))
                self.LeagueTable.setItem(club, 6, QTableWidgetItem(str(connection.goals[club])))
                self.LeagueTable.setItem(club, 7, QTableWidgetItem(str(connection.points[club])))

        def connection(url):
            req = ul.Request(url, headers={'User-Agent': 'Mozilla/5.0'})
            client = ul.urlopen(req)
            htmldata = client.read()

            connection.clubs = []
            connection.matches = []
            connection.wins = []
            connection.draws = []
            connection.loses = []
            connection.balance = []
            connection.goals = []
            connection.points = []

            pagesoup = soup(htmldata, "html.parser")
            table = pagesoup.find('table', {"class":"items"})
            connection.row = table.findAll('tr')
            for rows in connection.row:
                column = rows.findAll('td')
                if len(column)<1:
                    None
                else:
                    for columns in range (2, len(column)):
                        if columns == 2:
                            connection.clubs.append(column[columns].text.strip())
                        elif columns == 3:
                            connection.matches.append(column[columns].text.strip())
                        elif columns == 4:
                            connection.wins.append(column[columns].text.strip())
                        elif columns == 5:
                            connection.draws.append(column[columns].text.strip())
                        elif columns == 6:
                            connection.loses.append(column[columns].text.strip())
                        elif columns == 7:
                            connection.balance.append(column[columns].text.strip())
                        elif columns == 8:
                            connection.goals.append(column[columns].text.strip())
                        elif columns == 9:
                            connection.points.append(column[columns].text.strip())
            create_table()

        def set_league():
            self.LeagueTable.setColumnCount(8) 
            self.LeagueTable.setHorizontalHeaderLabels(["Club","Matches","Wins","Draws","Loses","Goals","+/-","Points"])
            self.LeagueTable.horizontalHeader().setSectionResizeMode(QtWidgets.QHeaderView.Fixed)
            self.LeagueTable.setColumnWidth(1,50)
            self.LeagueTable.setColumnWidth(2,50)
            self.LeagueTable.setColumnWidth(3,50)
            self.LeagueTable.setColumnWidth(4,50)
            set_league.leagues_dict = {
                "Premier League":["premier-league", "GB1"],
                "Serie A":["serie-a","IT1"],
                "Bundesliga":["bundesliga","L1"],
                "Ligue 1":["ligue-1","FR1"],
                "LaLiga":["laliga","ES1"]
            }
            url = "https://www.transfermarkt.pl/"+set_league.leagues_dict[self.ComboLeague.currentText()][0]+"/tabelle/wettbewerb/"+set_league.leagues_dict[self.ComboLeague.currentText()][1]+"/saison_id/2022"
            connection(url)

        self.ComboLeague.activated.connect(set_league)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Football"))
        self.label.setText(_translate("MainWindow", "Select league"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    app.setStyle('Fusion')
    MainWindow.show()
    sys.exit(app.exec_())
